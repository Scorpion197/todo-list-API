version: '3.8' # Using version 3.8 which supports Docker stack and Docker Swarm

services:
  nest-backend:
    image: nest-backend # must be built
    ports:
      - '3000:3000'
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - REDIS_TOKEN_EXPIRATION_TIME=${REDIS_TOKEN_EXPIRATION_TIME}
      - DATABASE=${DATABASE}
    env_file:
      - ./.env
    networks:
      - backend_network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - ./.env
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  redis:
    image: redis:7.0.12-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/var/lib/redis/
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  nginx:
    image: custom-nginx:latest # Replace with a custom image deployed to docker registry
    ports:
      - '80:80'
    networks:
      - backend_network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    depends_on:
      - nest-backend

networks:
  backend_network:
    driver: overlay # Changed to overlay for Docker Swarm

volumes:
  cache:
    driver: local
